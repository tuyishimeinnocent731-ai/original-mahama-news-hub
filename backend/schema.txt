CREATE DATABASE IF NOT EXISTS mahama_news_hub;

USE mahama_news_hub;

-- Main Tables

CREATE TABLE IF NOT EXISTS users (
    id VARCHAR(255) PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    avatar VARCHAR(255),
    bio TEXT,
    socials JSON,
    subscription ENUM('free', 'standard', 'premium', 'pro') DEFAULT 'free',
    two_factor_enabled BOOLEAN DEFAULT FALSE,
    role ENUM('admin', 'sub-admin', 'user') DEFAULT 'user',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    stripe_customer_id VARCHAR(255) UNIQUE,
    stripe_subscription_id VARCHAR(255) UNIQUE,
    stripe_subscription_status VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS articles (
    id VARCHAR(255) PRIMARY KEY,
    title TEXT NOT NULL,
    description TEXT,
    body LONGTEXT,
    author VARCHAR(255),
    published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    source_name VARCHAR(255),
    url_to_image TEXT,
    category VARCHAR(255),
    gallery_images JSON,
    scheduled_for TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS ads (
    id VARCHAR(255) PRIMARY KEY,
    headline VARCHAR(255) NOT NULL,
    image TEXT,
    url TEXT,
    user_id VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS comments (
    id VARCHAR(255) PRIMARY KEY,
    article_id VARCHAR(255) NOT NULL,
    user_id VARCHAR(255) NOT NULL,
    body TEXT NOT NULL,
    parent_id VARCHAR(255),
    status ENUM('pending', 'approved', 'rejected') DEFAULT 'approved',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (article_id) REFERENCES articles(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (parent_id) REFERENCES comments(id) ON DELETE CASCADE
);

-- Join & Relational Tables

CREATE TABLE IF NOT EXISTS saved_articles (
    user_id VARCHAR(255) NOT NULL,
    article_id VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, article_id),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (article_id) REFERENCES articles(id) ON DELETE CASCADE
);

-- User-specific Data Tables

CREATE TABLE IF NOT EXISTS user_settings (
    user_id VARCHAR(255) PRIMARY KEY,
    theme_name ENUM('default', 'midnight', 'latte', 'forest', 'oceanic', 'rose', 'slate', 'sandstone', 'nebula', 'cyberpunk', 'solaris', 'monochrome', 'cosmic', 'sunset', 'image') DEFAULT 'default',
    theme_accent ENUM('yellow', 'blue', 'green', 'red', 'purple', 'pink', 'indigo', 'teal') DEFAULT 'yellow',
    font_family VARCHAR(255) DEFAULT 'Inter',
    font_weight ENUM('300', '400', '500', '600', '700') DEFAULT '400',
    homepage_layout ENUM('grid', 'list', 'magazine') DEFAULT 'grid',
    content_density ENUM('compact', 'comfortable', 'spacious') DEFAULT 'comfortable',
    infinite_scroll BOOLEAN DEFAULT FALSE,
    card_style ENUM('standard', 'elevated', 'outline') DEFAULT 'standard',
    border_radius ENUM('sharp', 'rounded', 'pill') DEFAULT 'rounded',
    auto_play_audio BOOLEAN DEFAULT FALSE,
    default_summary_view BOOLEAN DEFAULT FALSE,
    line_height DECIMAL(3, 2) DEFAULT 1.6,
    letter_spacing DECIMAL(3, 2) DEFAULT 0.0,
    justify_text BOOLEAN DEFAULT FALSE,
    font_size ENUM('small', 'medium', 'large') DEFAULT 'small',
    high_contrast BOOLEAN DEFAULT FALSE,
    reduce_motion BOOLEAN DEFAULT FALSE,
    dyslexia_font BOOLEAN DEFAULT FALSE,
    notifications_breaking_news BOOLEAN DEFAULT TRUE,
    notifications_weekly_digest BOOLEAN DEFAULT TRUE,
    notifications_special_offers BOOLEAN DEFAULT FALSE,
    data_sharing BOOLEAN DEFAULT TRUE,
    ad_personalization BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS search_history (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    query VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS payment_history (
    id VARCHAR(255) PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    date TIMESTAMP NOT NULL,
    plan ENUM('free', 'standard', 'premium', 'pro') NOT NULL,
    amount VARCHAR(255) NOT NULL,
    method VARCHAR(255) NOT NULL,
    status ENUM('succeeded', 'pending', 'failed') NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    type ENUM('alert', 'feature', 'update', 'message') NOT NULL,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE,
    link VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS api_keys (
    id VARCHAR(255) PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    prefix VARCHAR(8) NOT NULL UNIQUE,
    key_hash VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_used TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);


-- Analytics & Logging Tables

CREATE TABLE IF NOT EXISTS article_views (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    article_id VARCHAR(255) NOT NULL,
    user_id VARCHAR(255),
    ip_address VARCHAR(45),
    user_agent TEXT,
    viewed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (article_id) REFERENCES articles(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS activity_log (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    action_type VARCHAR(255) NOT NULL,
    details JSON,
    ip_address VARCHAR(45),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Site Configuration Tables

CREATE TABLE IF NOT EXISTS nav_links (
    id VARCHAR(255) PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    href VARCHAR(255) NOT NULL,
    parent_id VARCHAR(255),
    sort_order INT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS site_settings (
    setting_key VARCHAR(255) PRIMARY KEY,
    setting_value TEXT
);

CREATE TABLE IF NOT EXISTS pages (
    slug VARCHAR(255) PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    content LONGTEXT,
    last_updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (last_updated_by) REFERENCES users(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS contact_messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    subject VARCHAR(255),
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Careers Tables
CREATE TABLE IF NOT EXISTS job_postings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    type ENUM('Full-time', 'Part-time', 'Contract') NOT NULL,
    description TEXT NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS job_applications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    job_id INT NOT NULL,
    user_id VARCHAR(255),
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    resume_path VARCHAR(255) NOT NULL,
    cover_letter TEXT,
    applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (job_id) REFERENCES job_postings(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);


-- Insert Default Admin User & Settings
INSERT INTO users (id, name, email, password_hash, avatar, bio, socials, subscription, two_factor_enabled, role) 
VALUES (
    'admin-001', 
    'Admin Reponse', 
    'reponsekdz0@gmail.com', 
    '$2a$10$f/e.aN1kSg8g.b.1kQ2a..rA8Q2C/1z3c.E4o.Xg.j4a.QY4k.b.K', 
    'https://i.pravatar.cc/150?u=adminreponse', 
    'Site Administrator.', 
    '{"twitter": "reponse", "linkedin": "reponse"}', 
    'pro', 
    true, 
    'admin'
) ON DUPLICATE KEY UPDATE name = VALUES(name);

INSERT INTO user_settings (user_id) VALUES ('admin-001') ON DUPLICATE KEY UPDATE user_id=user_id;

-- Populate default site settings
INSERT INTO site_settings (setting_key, setting_value) VALUES 
('siteName', 'Mahama News Hub'),
('maintenanceMode', 'false')
ON DUPLICATE KEY UPDATE setting_key=setting_key;

-- Populate default page content
INSERT INTO pages (slug, title, content) VALUES
('about-us', 'About Us', '<h1>Our Mission</h1><p>To provide timely, unbiased, and in-depth news coverage to a global audience. We believe in the power of information to enlighten and empower.</p><h2>Our Story</h2><p>Founded in 2024, Mahama News Hub started as a small project to explore the capabilities of AI in journalism. It has since grown into a comprehensive news platform, dedicated to quality and innovation.</p>'),
('contact-us', 'Contact Us', '<p>We''d love to hear from you. Whether you have a question, feedback, or a news tip, please don''t hesitate to get in touch.</p>'),
('careers', 'Join Our Team', '<h2>Work with us</h2><p>We are a passionate team dedicated to redefining the future of news. We are always looking for talented individuals to join us on our mission.</p>'),
('privacy-policy', 'Privacy Policy', '<h2>Your Privacy Matters</h2><p>This is a placeholder for your privacy policy. It is crucial to outline how you collect, use, and protect user data. Be transparent about cookies, third-party services, and user rights.</p><p>A comprehensive privacy policy builds trust and is often a legal requirement.</p>')
ON DUPLICATE KEY UPDATE title=VALUES(title), content=VALUES(content);